/******************************************************************
Site Name:
Author:

Stylesheet: Mixins Stylesheet

This is where you can take advantage of Sass' great features: Mixins.
I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

Helpful:
http://sachagreif.com/useful-sass-mixins/
http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/

******************************************************************/


/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(top, 60deg, #d8ceff, #edcdff); */
@mixin css-gradient($deg:60deg, $from: #d8ceff, $to: #edcdff) {
	background-image: 	-webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: 	-webkit-linear-gradient($deg, $from, $to);
	background-image:	-moz-linear-gradient($deg, $from, $to);
	background-image: 	-o-linear-gradient($deg, $from, $to);
	background-image: 	linear-gradient($deg, $from, $to);
	background-color: 	$to;
}


/* @include css-gradient-backgrnd(top, bg_formes, 60deg, #d8ceff, #edcdff); */
@mixin css-gradient-backgrnd($pos:top, $img:bg_formes, $deg:60deg, $from: #d8ceff, $to: #edcdff, $att:fixed) {
	$bgUrl:				url(../../library/images/#{$img}.png);
	background-color: 	$to;
	background-image: 	$bgUrl, -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: 	$bgUrl, -webkit-linear-gradient($deg, $from, $to);
	background-image:	$bgUrl, -moz-linear-gradient($deg, $from, $to);
	background-image: 	$bgUrl, -o-linear-gradient($deg, $from, $to);
	background-image: 	$bgUrl, linear-gradient($deg, $from, $to);
	background-attachment: $att;
	background-position: $pos;
}

/*********************
    Animation Css
*********************/

/* @include animCss-delay(delay); */
@mixin animCss-delay($delay: 0s) {
	-webkit-animation-delay:	$delay;
	-moz-animation-delay:		$delay;
	-o-animation-delay:			$delay;
	-ms-animation-delay:		$delay;
}

/* @include animCss-duration(duration); */
@mixin animCss-duration($duration: 3s) {
	-webkit-animation-duration:	$duration;
	-moz-animation-duration:	$duration;
	-o-animation-duration:      $duration;
	-ms-animation-duration: 	$duration;
}

/* @include animCss-iteration(count); */
@mixin animCss-iteration($count: infinite) {
	-webkit-animation-iteration-count:	$count;
	-moz-animation-iteration-count: 	$count;
	-o-animation-iteration-count: 		$count;
	-ms-animation-iteration-count: 		$count;
}